{"version":3,"sources":["components/utils/dateHelpers.js","components/utils/CleanIcon.js","components/graph/PieChart.js","components/graph/index.js","components/DatePickerCustom.js","components/SelectInput.js","components/relatorio/relatorio.js","components/relatorio/index.js","components/index.js","components/devData/columns.js","components/devData/data.js","App.js","index.js"],"names":["datetimeToString","date","whitHHmmSS","_date","substring","_HHmmSS","data","split","HHmmSS","Date","datetimeToStringYYYY_MM_DD","hhmmss","CleanIcon","props","viewBox","d","PieChart","options","allowChartUpdate","highcharts","Highcharts","Graph","reRenderPieGraph","setState","reRender","state","handleClickOpen","customColumns","firstColumnToRender","classes","find","coluna","renderGraph","response","filterGraphData","open","selectedColumn","filteredGraphTotal","Total","firstSelectedColumnCache","pieGraphOptions","title","text","label","series","colorByPoint","filteredArray","handleClose","handleSelectedColumn","column","KEY","dataKey","map","obj","undefined","hasInFilteredArray","e","name","trim","toLowerCase","includes","y","push","clearSelectedFilter","filterData","columnType","value","console","log","el","handleClear","clearInput","isClearFilter","clearAllFilters","inputRefs","renderFilterColumnList","inputsWhithValue","filter","input","isSelectInput","length","style","textAlign","marginTop","component","dense","overflow","maxHeight","key","border","borderRadius","boxShadow","width","primary","secondary","onClick","root","clearIconButton","size","fontSize","credits","enabled","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","format","events","click","a","filterDataClickEvent","pieGraphEvent","prevProps","prevState","this","position","marginRight","disabled","variant","color","onClose","fullWidth","maxWidth","className","gridContainer","leftColumn","selected","button","mainContent","rigthColumn","display","justifyContent","alignItems","background","padding","autoFocus","Component","withStyles","theme","boxSizing","height","MomentUtils","prototype","startOfMonth","getStartOfMonth","moment","locale","DatePickerCustom","handleDateChange","selectedDate","isFilterInput","handleDateChangeOnPieGraphClick","datePickerRef","React","createRef","columnIndex","utils","inputRoot","keyboardIcon","rightArrowIcon","leftArrowIcon","margin","ref","onChange","clearable","clearLabel","cancelLabel","SelectInput","handleChange","inputValue","handleChangePieGraphClick","inputFilterSelect","formControlContainer","select","target","Relatorio","cache","CellMeasurerCache","minHeight","rowHeight","defaultHeight","fixedWidth","keyMapper","generateLabelOrders","orders","order","orderBy","sortKey","setSortedData","lista","JSON","parse","stringify","labelState","labelOrders","sort","b","renderFilter","defaultValue","inputRef","InputProps","startAdornment","textFieldRoot","_cellRenderer","parent","rowIndex","colunasArray","isCustomRender","noFilter","render","row","getColumnWidth","index","clearInputs","reRenderAfterClearFilter","_cellHeaderRenderer","noFilters","labelStateOrder","isNoFilter","flexDirection","active","direction","orderDirection","noDataRenderer","renderGraphBtn","noBottomTotal","onScroll","scrollLeft","marginBottom","outline","borderBottom","cellRenderer","columnWidth","columnCount","fixedRowCount","rowCount","overscanColumnCount","deferredMeasurementCache","table","fontFamily","typography","flexContainer","tableCell","flex","wordBreak","noClick","tableHeaderCell","iconButons","RelatorioIndex","setFilteredData","filteredData","filtered","pointName","selectedInput","stringDatePoint","dateToString","formatedDate","originalData","debounceFilterForInput","_","debounce","filteredList","passedForFilters","nome","tableHeight","dataToRender","ShowRelatorio","DATA","hasData","hasCustomColumns","columnToFormat","Object","keys","utc","dateType","datetimeToStringDD_MM_YYYY","defaultProps","columns","backgroundImage","id","first_name","last_name","email","gender","language","birthday","cycle","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.685e307d.chunk.js","sourcesContent":["export const dateToString = date => {\r\n  const data = date.split('/')\r\n\r\n  return new Date(data[2], data[1] - 1, data[0])\r\n}\r\n\r\nexport const datetimeToString = (date, whitHHmmSS) => {\r\n  if (!date) return ''\r\n\r\n  let _date = date.substring(0, 10)\r\n  let _HHmmSS = date.substring(11, 19)\r\n\r\n  const data = _date.split('/')\r\n\r\n  const HHmmSS = _HHmmSS.split(':')\r\n\r\n  if (whitHHmmSS) {\r\n    return new Date(\r\n      data[2],\r\n      data[1] - 1,\r\n      data[0],\r\n      HHmmSS[0],\r\n      HHmmSS[1],\r\n      HHmmSS[2]\r\n    )\r\n  } else {\r\n    return new Date(data[2], data[1] - 1, data[0])\r\n  }\r\n}\r\n\r\nexport const datetimeToStringDD_MM_YYYY = (date, whitHHmmSS) => {\r\n  if (!date) return ''\r\n\r\n  let _date = date.substring(0, 10)\r\n  let _HHmmSS = date.substring(11, 19)\r\n\r\n  const data = _date.split('/')\r\n\r\n  const HHmmSS = _HHmmSS.split(':')\r\n\r\n  if (whitHHmmSS) {\r\n    return new Date(\r\n      data[2],\r\n      data[1] - 1,\r\n      data[0],\r\n      HHmmSS[0],\r\n      HHmmSS[1],\r\n      HHmmSS[2]\r\n    )\r\n  } else {\r\n    return { date: new Date(data[2], data[1] - 1, data[0]), hhmmss: _HHmmSS }\r\n  }\r\n}\r\n\r\nexport const datetimeToStringYYYY_MM_DD = (date, whitHHmmSS) => {\r\n  if (!date) return ''\r\n\r\n  let _date = date.substring(0, 10)\r\n  let _HHmmSS = date.substring(11, 19)\r\n\r\n  const data = _date.split('-')\r\n\r\n  const HHmmSS = _HHmmSS.split(':')\r\n\r\n  if (whitHHmmSS) {\r\n    return new Date(\r\n      data[2],\r\n      data[1] - 1,\r\n      data[0],\r\n      HHmmSS[0],\r\n      HHmmSS[1],\r\n      HHmmSS[2]\r\n    )\r\n  } else {\r\n    return { date: new Date(data[0], data[1] - 1, data[2]), hhmmss: _HHmmSS }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport SvgIcon from '@material-ui/core/SvgIcon'\r\n\r\nconst CleanIcon = props => (\r\n  <SvgIcon {...props} viewBox=\"0 0 128 128\">\r\n    <g>\r\n      <g>\r\n        <path d=\"M87.981,53.639L75.754,41.315c-0.001-0.001-0.002-0.003-0.004-0.005l-5.048-5.088    c-3.557,3.437-7.366,6.392-11.33,8.93l27.534,27.753l6.23-14.07L87.981,53.639L87.981,53.639z\" />\r\n        <path d=\"M55.582,47.427C37.704,57.454,17.291,59.499,2,57.562c1.144,5.533,2.965,11.159,5.434,16.77    c0.603,0.134,1.814,0.187,2.586,0.222c2.61,0.117,5.076,0.227,6.076,2.162c1.061,2.055-0.064,4.411-1.153,6.69    c-0.432,0.904-1.142,2.39-1.161,2.978c6.066,9.814,13.763,18.514,22.3,25.21c1.189-0.425,3.763-1.932,5.538-2.971    c5.384-3.151,7.642-4.383,9.475-3.164c2.504,1.664,0.848,4.936-1.444,9.464c-0.623,1.231-1.577,3.115-1.976,4.227    c5.337,2.808,10.761,4.771,16.162,5.851L85.04,77.118L55.582,47.427z\" />\r\n        <path d=\"M119.502,3c-1.732,0-3.362,0.681-4.589,1.918L80.302,39.804l9.204,9.277l34.586-34.86    c2.545-2.565,2.545-6.739,0-9.304C122.864,3.681,121.235,3,119.502,3z\" />\r\n      </g>\r\n    </g>\r\n  </SvgIcon>\r\n)\r\n\r\nexport default CleanIcon\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\n\r\nconst PieChart = ({ options }) => (\r\n  <div>\r\n    <HighchartsReact\r\n      allowChartUpdate\r\n      highcharts={Highcharts}\r\n      options={options}\r\n    />\r\n  </div>\r\n)\r\n\r\nexport default PieChart\r\n\r\nPieChart.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport PieChartIcon from '@material-ui/icons/PieChart'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport PieChart from './PieChart'\r\nimport CleanIcon from '../utils/CleanIcon'\r\n\r\nconst CCOLUMN_WIDTH = 220\r\n\r\nconst styles = theme => ({\r\n  gridContainer: {\r\n    display: 'grid',\r\n    'grid-template-columns': `${CCOLUMN_WIDTH}px auto ${CCOLUMN_WIDTH}px`,\r\n    boxSizing: 'border-box',\r\n  },\r\n  leftColumn: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    maxWidth: CCOLUMN_WIDTH,\r\n  },\r\n  rigthColumn: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    maxWidth: CCOLUMN_WIDTH,\r\n  },\r\n  mainContent: {},\r\n  clearIconButton: {\r\n    width: 10,\r\n    height: 10,\r\n  },\r\n})\r\n\r\nclass Graph extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      reRender: false,\r\n      open: false,\r\n      selectedColumn: {},\r\n      firstSelectedColumnCache: {},\r\n      filteredGraphTotal: null,\r\n      pieGraphOptions: {\r\n        credits: {\r\n          enabled: false,\r\n        },\r\n        chart: {\r\n          plotBackgroundColor: null,\r\n          plotBorderWidth: null,\r\n          plotShadow: false,\r\n          type: 'pie',\r\n        },\r\n        title: {\r\n          text: 'Browser market shares in January, 2018',\r\n        },\r\n        tooltip: {\r\n          pointFormat: 'Total: {point.percentage:.1f}%',\r\n        },\r\n        accessibility: {\r\n          point: {\r\n            valueSuffix: '%',\r\n          },\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n              enabled: true,\r\n              format: '{point.name}: {point.y}',\r\n            },\r\n          },\r\n          series: {\r\n            cursor: 'pointer',\r\n            point: {\r\n              events: {\r\n                click: (e, a) =>\r\n                  this.props.filterDataClickEvent({\r\n                    pieGraphEvent: e,\r\n                    selectedColumn: this.state.selectedColumn,\r\n                    reRenderPieGraph: this.reRenderPieGraph,\r\n                  }),\r\n              },\r\n            },\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            colorByPoint: true,\r\n            data: [],\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.reRender !== this.state.reRender) {\r\n      let { selectedColumn } = this.state\r\n\r\n      let response = this.filterGraphData(selectedColumn)\r\n\r\n      this.setState({\r\n        filteredGraphTotal: response.Total,\r\n        pieGraphOptions: {\r\n          ...this.state.pieGraphOptions,\r\n          series: [\r\n            {\r\n              colorByPoint: true,\r\n              data: [...response.filteredArray],\r\n            },\r\n          ],\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  reRenderPieGraph = () => {\r\n    this.setState({\r\n      reRender: !this.state.reRender,\r\n    })\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    const { customColumns, data, classes } = this.props\r\n\r\n    let firstColumnToRender = customColumns.find(\r\n      coluna => coluna.renderGraph !== false\r\n    )\r\n\r\n    let response = this.filterGraphData(firstColumnToRender)\r\n\r\n    this.setState({\r\n      open: true,\r\n      selectedColumn: firstColumnToRender,\r\n      filteredGraphTotal: response.Total,\r\n      firstSelectedColumnCache: firstColumnToRender,\r\n      pieGraphOptions: {\r\n        ...this.state.pieGraphOptions,\r\n        title: {\r\n          text: firstColumnToRender.label,\r\n        },\r\n        series: [\r\n          {\r\n            colorByPoint: true,\r\n            data: response.filteredArray,\r\n          },\r\n        ],\r\n      },\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n      selectedColumn: this.state.firstSelectedColumnCache,\r\n    })\r\n  }\r\n\r\n  handleSelectedColumn = coluna => {\r\n    let response = this.filterGraphData(coluna)\r\n\r\n    this.setState({\r\n      selectedColumn: coluna,\r\n      filteredGraphTotal: response.Total,\r\n      pieGraphOptions: {\r\n        ...this.state.pieGraphOptions,\r\n        title: {\r\n          text: coluna.label,\r\n        },\r\n        series: [\r\n          {\r\n            colorByPoint: true,\r\n            data: response.filteredArray,\r\n          },\r\n        ],\r\n      },\r\n    })\r\n  }\r\n\r\n  filterGraphData = column => {\r\n    const { data } = this.props\r\n\r\n    let KEY = column.dataKey\r\n\r\n    let filteredArray = []\r\n\r\n    data.map(obj => {\r\n      if (obj[KEY] == '' || obj[KEY] == undefined || obj[KEY] == null) {\r\n        obj[KEY] = 'Indefinido'\r\n      }\r\n\r\n      let hasInFilteredArray = filteredArray.find(e =>\r\n        e.name.trim().toLowerCase().includes(obj[KEY].toLowerCase().trim())\r\n      )\r\n\r\n      if (hasInFilteredArray) {\r\n        hasInFilteredArray.y++\r\n      } else {\r\n        filteredArray.push({ name: obj[KEY], y: 1 })\r\n      }\r\n    })\r\n\r\n    let Total = 0\r\n\r\n    filteredArray.map(e => (Total += e.y))\r\n\r\n    return { filteredArray, Total }\r\n  }\r\n\r\n  clearSelectedFilter = e => {\r\n    const { filterData } = this.props\r\n\r\n    if (e.columnType == 'date' || e.columnType == 'datetime') {\r\n      e.value = ''\r\n      console.log('e', e.el)\r\n      e.el.handleClear()\r\n    } else if (e.el.props) {\r\n      e.el.props.clearInput()\r\n    } else {\r\n      e.el.value = ''\r\n    }\r\n\r\n    this.reRenderPieGraph()\r\n    filterData({ isClearFilter: true })\r\n  }\r\n\r\n  clearAllFilters = () => {\r\n    const { filterData, inputRefs } = this.props\r\n\r\n    inputRefs.map(e => {\r\n      if (e.columnType == 'date' || e.columnType == 'datetime') {\r\n        e.value = ''\r\n        e.el.handleClear()\r\n      } else if (e.el.props) {\r\n        e.el.props.clearInput()\r\n      } else {\r\n        e.el.value = ''\r\n      }\r\n    })\r\n\r\n    this.reRenderPieGraph()\r\n\r\n    filterData({ isClearFilter: true })\r\n  }\r\n\r\n  renderFilterColumnList = () => {\r\n    const { customColumns, data, classes, inputRefs } = this.props\r\n\r\n    let inputsWhithValue = inputRefs.filter(input => {\r\n      if (input.columnType == 'date' || input.columnType == 'datetime') {\r\n        if (input.value) {\r\n          return input\r\n        }\r\n      } else if (input.isSelectInput) {\r\n        if (input.value !== '' && input.value !== undefined) {\r\n          return input\r\n        }\r\n      } else if (input.el.value !== '') {\r\n        return input\r\n      }\r\n    })\r\n\r\n    console.log('inputsWhithValue', inputsWhithValue)\r\n\r\n    if (inputsWhithValue.length === 0) {\r\n      return (\r\n        <div style={{ textAlign: 'center', marginTop: 15 }}>Nenhum filtro</div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <List component=\"nav\" dense style={{ overflow: 'auto', maxHeight: 450 }}>\r\n        {inputsWhithValue.map(input => (\r\n          <ListItem\r\n            key={`RightColumn${input.name}`}\r\n            style={{\r\n              border: '1px solid #eee',\r\n              borderRadius: 4,\r\n              marginTop: 7,\r\n              boxShadow: '1px 1px 2px #bbb',\r\n              width: '98%',\r\n            }}\r\n          >\r\n            <ListItemText\r\n              primary={input.label}\r\n              secondary={input.value || input.el.value}\r\n            />\r\n            <IconButton\r\n              onClick={() => this.clearSelectedFilter(input)}\r\n              classes={{\r\n                root: classes.clearIconButton,\r\n              }}\r\n              size=\"small\"\r\n            >\r\n              <ClearIcon style={{ fontSize: 20 }} />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { customColumns, data, classes, inputRefs } = this.props\r\n    const {\r\n      selectedColumn,\r\n      pieGraphOptions,\r\n      filteredGraphTotal,\r\n      open,\r\n    } = this.state\r\n\r\n    return (\r\n      <div style={{ position: 'relative' }}>\r\n        <Button\r\n          style={{ marginRight: 8 }}\r\n          disabled={data.length === 0}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => this.handleClickOpen()}\r\n        >\r\n          <PieChartIcon style={{ marginRight: 4 }} />\r\n          gráfico\r\n        </Button>\r\n\r\n        {open && (\r\n          <Dialog\r\n            open={this.state.open}\r\n            onClose={this.handleClose}\r\n            fullWidth\r\n            maxWidth=\"lg\"\r\n          >\r\n            <DialogContent>\r\n              <div className={classes.gridContainer}>\r\n                <div className={classes.leftColumn}>\r\n                  <List\r\n                    component=\"nav\"\r\n                    dense\r\n                    style={{ overflow: 'auto', maxHeight: 450 }}\r\n                  >\r\n                    {customColumns.map(coluna => {\r\n                      if (coluna.renderGraph === false) {\r\n                        return\r\n                      }\r\n\r\n                      return (\r\n                        <ListItem\r\n                          key={`leftColumn${coluna.dataKey}`}\r\n                          selected={coluna.dataKey == selectedColumn.dataKey}\r\n                          button\r\n                          onClick={() => this.handleSelectedColumn(coluna)}\r\n                        >\r\n                          <ListItemText primary={coluna.label} />\r\n                        </ListItem>\r\n                      )\r\n                    })}\r\n                  </List>\r\n                </div>\r\n                <div className={classes.mainContent}>\r\n                  <PieChart options={pieGraphOptions} />\r\n                </div>\r\n                <div className={classes.rigthColumn}>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                      background: '#eee',\r\n                      padding: 10,\r\n                      borderRadius: 4,\r\n                    }}\r\n                  >\r\n                    <FilterListIcon style={{ marginRight: 5 }} /> Filtros\r\n                  </div>\r\n                  {inputRefs.length > 0 && this.renderFilterColumnList()}\r\n                </div>\r\n              </div>\r\n            </DialogContent>\r\n\r\n            <div\r\n              style={{\r\n                padding: '0px 24px 8px 24px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <div>Total: {filteredGraphTotal}</div>\r\n              <div>\r\n                <Button\r\n                  onClick={this.clearAllFilters}\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                >\r\n                  <CleanIcon />\r\n                  Limpar filtro\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Dialog>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Graph)\r\n\r\nGraph.propTypes = {\r\n  customColumns: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  classes: PropTypes.array.isRequired,\r\n  inputRefs: PropTypes.array.isRequired,\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"material-ui-pickers\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport {Event, KeyboardArrowLeft, KeyboardArrowRight} from '@material-ui/icons'\r\nimport 'moment/locale/pt-br';\r\nimport MomentUtils from '@date-io/moment';\r\nMomentUtils.prototype.startOfMonth=MomentUtils.prototype.getStartOfMonth;\r\nmoment.locale('pt-br');\r\n\r\nconst styles = theme => ({\r\n  inputRoot: {\r\n    marginTop: -3,\r\n    padding: 0,\r\n    '& input': {\r\n      padding: '10px 8px',\r\n      textAlign: 'center',\r\n      fontSize: 14\r\n    }\r\n\r\n  },\r\n})\r\n\r\nclass DatePickerCustom extends Component{\r\n\r\n  constructor( props ){\r\n\r\n    super( props );\r\n\r\n    this.state = {\r\n      selectedDate: this.props.value || null,\r\n    }\r\n    this.datePickerRef = React.createRef();\r\n\r\n  }\r\n\r\n  handleDateChange = ( data ) => {\r\n\r\n    this.setState({\r\n      selectedDate: data\r\n    })\r\n    this.props.filterData( {isFilterInput: true} );\r\n\r\n  }\r\n\r\n  handleDateChangeOnPieGraphClick = (data) => {\r\n    this.setState({\r\n      selectedDate: data\r\n    })\r\n  }\r\n\r\n  render(){\r\n\r\n    const {columnIndex, inputRefs, KEY, columnType, label, classes } = this.props;\r\n\r\n    return (\r\n      <MuiPickersUtilsProvider\r\n        utils={MomentUtils}\r\n        moment={moment}\r\n        style={{cursor: 'pointer'}}\r\n       >\r\n\r\n        <FormControl  className={classes.inputRoot}>\r\n          <DatePicker\r\n            locale=\"pt-BR\"\r\n            keyboardIcon={<Event/>}\r\n            rightArrowIcon={<KeyboardArrowRight/>}\r\n            leftArrowIcon={<KeyboardArrowLeft/>}\r\n            handleDateChangeOnPieGraphClick={this.handleDateChangeOnPieGraphClick}\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            ref={el =>  {\r\n              if( el){\r\n                this.datePickerRef = el;\r\n                inputRefs[columnIndex] = {name: KEY, el, label, columnType, value: this.state.selectedDate ? moment(this.state.selectedDate).format('DD/MM/YYYY') : ''};\r\n              }\r\n            }}\r\n            value={this.state.selectedDate}\r\n            onChange={(e) => this.handleDateChange(e)}\r\n            format={\"DD/MM/YYYY\"}\r\n            clearable\r\n            clearLabel=\"limpar filtro\"\r\n            cancelLabel=\"cancelar\"\r\n          />\r\n        </FormControl>\r\n\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(DatePickerCustom);\r\n\r\nDatePickerCustom.propTypes = {\r\n  customColumns: PropTypes.array.isRequired,\r\n  columnIndex: PropTypes.number.isRequired,\r\n  inputRefs: PropTypes.array.isRequired,\r\n  KEY: PropTypes.string.isRequired,\r\n  columnType: PropTypes.array.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  classes: PropTypes.array.isRequired,\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n  formControlContainer: {\r\n    width: '100%',\r\n    marginTop: 5\r\n  },\r\n  inputRoot: {\r\n    padding: '10px 8px',\r\n    width: '100%',\r\n    fontSize: 14\r\n  },\r\n})\r\n\r\nclass SelectInput extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      inputValue: '',\r\n    }\r\n  }\r\n\r\n  handleChange = value => {\r\n    const { inputRefs, columnIndex, filterData } = this.props\r\n\r\n    inputRefs[columnIndex] = value;\r\n    this.setState({ inputValue: value });\r\n    filterData({isFilterInput: true});\r\n  };\r\n\r\n  clearInput = () => {\r\n    const { inputRefs, columnIndex } = this.props\r\n\r\n    inputRefs[columnIndex].value = '';\r\n    this.setState({ inputValue: '' });\r\n  }\r\n\r\n  handleChangePieGraphClick = (value) => {\r\n    const { inputRefs, columnIndex, filterData } = this.props\r\n\r\n    if( value === this.state.inputValue){\r\n      inputRefs[columnIndex] = '';\r\n    this.setState({ inputValue: '' });\r\n    }else{\r\n      inputRefs[columnIndex] = value;\r\n      this.setState({ inputValue: value });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { inputRefs, columnIndex, inputFilterSelect, KEY, label, classes } = this.props\r\n    return (\r\n      <FormControl variant=\"outlined\" className={classes.formControlContainer}>\r\n        <Select\r\n         classes={ {\r\n          select: classes.inputRoot\r\n         } }\r\n          ref={el => el && (inputRefs[columnIndex] = { name: KEY, el, label, value: this.state.inputValue || inputRefs[columnIndex] && inputRefs[columnIndex].value, isSelectInput: true })}\r\n          value={this.state.inputValue || inputRefs[columnIndex] && inputRefs[columnIndex].value}\r\n          onChange={(e) => this.handleChange( e.target.value)}\r\n          clearInput={this.clearInput}\r\n          input={<OutlinedInput/>}\r\n          handleChangePieGraphClick={this.handleChangePieGraphClick}\r\n        >\r\n          {inputFilterSelect.map(e => (\r\n            <MenuItem key={e.label} value={e.value}>\r\n              {e.label}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SelectInput);\r\n\r\nSelectInput.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  inputRefs: PropTypes.array.isRequired,\r\n  columnIndex: PropTypes.number.isRequired,\r\n  inputFilterSelect: PropTypes.array.isRequired,\r\n  KEY: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n  AutoSizer,\r\n  Grid,\r\n  ScrollSync,\r\n} from 'react-virtualized'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport { Button, Typography } from '@material-ui/core'\r\nimport CleanIcon from '../utils/CleanIcon'\r\nimport Graph from '../graph'\r\nimport DatePickerCustom from '../DatePickerCustom'\r\nimport SelectInput from '../SelectInput'\r\n\r\nconst styles = theme => ({\r\n  table: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  tableCell: {\r\n    textAlign: 'center',\r\n    flex: 1,\r\n    wordBreak: 'break-all',\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n  tableHeaderCell: {\r\n    fontSize: '14pt',\r\n    flex: 1,\r\n  },\r\n  iconButons: {\r\n    color: 'rgba(0, 0, 0, 0.54)',\r\n    cursor: 'pointer',\r\n    borderRadius: '50%',\r\n    '&:hover': {\r\n      background: '#eee',\r\n    },\r\n    padding: 5,\r\n  },\r\n  margin: {\r\n    marginTop: 5,\r\n  },\r\n  textFieldRoot: {\r\n    padding: '0px 4px',\r\n    margin: '0px !important',\r\n    '& input': {\r\n      padding: '10px 0px',\r\n      fontSize: 14,\r\n    },\r\n  },\r\n})\r\n\r\nclass Relatorio extends Component {\r\n  cache = new CellMeasurerCache({\r\n    minHeight: this.props.rowHeight || 60,\r\n    defaultHeight: 180,\r\n    fixedWidth: true,\r\n    keyMapper: () => 1,\r\n  })\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      labelOrders: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      labelOrders: this.generateLabelOrders(),\r\n    })\r\n  }\r\n\r\n  generateLabelOrders = () => {\r\n    const { customColumns } = this.props\r\n\r\n    let orders = []\r\n    customColumns.map(e => {\r\n      orders.push({ key: e.dataKey, order: null })\r\n    })\r\n    return orders\r\n  }\r\n\r\n  orderBy = ({ sortKey }) => {\r\n    const { data, setSortedData } = this.props\r\n\r\n    let lista = JSON.parse(JSON.stringify(data))\r\n\r\n    let labelState = ''\r\n    this.state.labelOrders.map(label => {\r\n      if (label.key !== sortKey) {\r\n        label.order = null\r\n      } else {\r\n        labelState = label\r\n      }\r\n    })\r\n\r\n    if (!labelState.order) {\r\n      labelState.order = 'asc'\r\n    } else {\r\n      labelState.order = labelState.order == 'asc' ? 'desc' : 'asc'\r\n    }\r\n\r\n    if (labelState.order == 'asc') {\r\n      lista.sort(function (a, b) {\r\n        return a[sortKey] > b[sortKey] ? 1 : b[sortKey] > a[sortKey] ? -1 : 0\r\n      })\r\n    } else if (labelState.order == 'desc') {\r\n      lista.sort(function (a, b) {\r\n        return a[sortKey] < b[sortKey] ? 1 : b[sortKey] < a[sortKey] ? -1 : 0\r\n      })\r\n    }\r\n\r\n    setSortedData(lista)\r\n  }\r\n\r\n  renderFilter = ({ columnIndex, KEY, columnType, label }) => {\r\n    const { inputRefs, classes, filterData, customColumns } = this.props\r\n\r\n    let { inputFilterSelect } = customColumns[columnIndex]\r\n\r\n    if (columnType == 'date' || columnType == 'datetime') {\r\n      return (\r\n        <DatePickerCustom\r\n          label={label}\r\n          filterData={filterData}\r\n          value={\r\n            this.props.inputRefs[columnIndex] &&\r\n            inputRefs[columnIndex].el.props.value\r\n          }\r\n          KEY={KEY}\r\n          inputRefs={inputRefs}\r\n          columnIndex={columnIndex}\r\n          columnType={columnType}\r\n        />\r\n      )\r\n    }\r\n\r\n    if (inputFilterSelect) {\r\n      return (\r\n        <SelectInput\r\n          filterData={filterData}\r\n          inputFilterSelect={inputFilterSelect}\r\n          label={label}\r\n          inputRefs={inputRefs}\r\n          columnIndex={columnIndex}\r\n          KEY={KEY}\r\n          customColumns={customColumns}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <TextField\r\n        margin=\"dense\"\r\n        className={classes.margin}\r\n        defaultValue={\r\n          this.props.inputRefs[columnIndex] && inputRefs[columnIndex].el.value\r\n        }\r\n        inputRef={el =>\r\n          el && (inputRefs[columnIndex] = { name: KEY, el, label })\r\n        }\r\n        onChange={e =>\r\n          this.props.filterData({ isFilterInput: true, columnType })\r\n        }\r\n        variant=\"outlined\"\r\n        InputProps={{\r\n          startAdornment: columnType !== 'date' && columnType !== 'datetime' && (\r\n            <InputAdornment position=\"start\">\r\n              <FilterListIcon />\r\n            </InputAdornment>\r\n          ),\r\n          className: classes.textFieldRoot,\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  _cellRenderer = ({ columnIndex, key, parent, rowIndex, style }) => {\r\n    const { customColumns, data, colunasArray } = this.props\r\n\r\n    let KEY = colunasArray[columnIndex]\r\n    let { label } = customColumns[columnIndex]\r\n    let labelStateOrder = this.state.labelOrders[columnIndex].order\r\n    let noRenderFilter = customColumns[columnIndex].noFilter\r\n    let isCustomRender = customColumns[columnIndex].render\r\n\r\n    return (\r\n      <CellMeasurer\r\n        cache={this.cache}\r\n        columnIndex={columnIndex}\r\n        key={key}\r\n        parent={parent}\r\n        rowIndex={rowIndex}\r\n      >\r\n        <div style={style}>\r\n          {isCustomRender ? (\r\n            isCustomRender({\r\n              column: customColumns[columnIndex],\r\n              row: data[rowIndex],\r\n              KEY,\r\n            })\r\n          ) : (\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n                width: '90%',\r\n                fontSize: 11,\r\n              }}\r\n            >\r\n              {data[rowIndex][KEY]}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CellMeasurer>\r\n    )\r\n  }\r\n\r\n  getColumnWidth = ({ index }) => {\r\n    const { customColumns, data } = this.props\r\n\r\n    return customColumns[index].width || 200\r\n  }\r\n\r\n  clearInputs = () => {\r\n    const { reRenderAfterClearFilter, inputRefs } = this.props\r\n\r\n    inputRefs.map(e => {\r\n      if (e.columnType == 'date' || e.columnType == 'datetime') {\r\n        e.value = ''\r\n        e.el.handleClear()\r\n      } else if (e.el.props) {\r\n        e.el.props.clearInput()\r\n      } else {\r\n        e.el.value = ''\r\n      }\r\n    })\r\n\r\n    reRenderAfterClearFilter()\r\n  }\r\n\r\n  _cellHeaderRenderer = ({ columnIndex, key, style }) => {\r\n    const { customColumns, colunasArray, noFilters } = this.props\r\n\r\n    let KEY = colunasArray[columnIndex]\r\n    let { label } = customColumns[columnIndex]\r\n    let labelStateOrder = this.state.labelOrders[columnIndex].order\r\n    let isNoFilter = customColumns[columnIndex].noFilter\r\n    let columnType = customColumns[columnIndex].type\r\n\r\n    return (\r\n      <div key={key} style={style}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            width: '90%',\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <TableSortLabel\r\n              active={\r\n                labelStateOrder == 'asc' || labelStateOrder == 'desc'\r\n                  ? true\r\n                  : false\r\n              }\r\n              direction={labelStateOrder || 'asc'}\r\n              onClick={() =>\r\n                this.orderBy({ sortKey: KEY, orderDirection: 'desc' })\r\n              }\r\n            >\r\n              {label}\r\n            </TableSortLabel>\r\n          </div>\r\n\r\n          {noFilters || isNoFilter\r\n            ? null\r\n            : this.renderFilter({ columnIndex, KEY, columnType, label })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  noDataRenderer = () => {\r\n    return (\r\n      <div style={{ textAlign: 'center', background: '#eee', padding: 10 }}>\r\n        Nenhum registro\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      customColumns,\r\n      data,\r\n      renderGraphBtn,\r\n      filterData,\r\n      inputRefs,\r\n      filterDataClickEvent,\r\n      noBottomTotal,\r\n    } = this.props\r\n\r\n    return (\r\n      <div style={{ height: '100%', position: 'relative' }}>\r\n        <ScrollSync>\r\n          {({ onScroll, scrollLeft }) => (\r\n            <div style={{ position: 'relative', height: '100%' }}>\r\n              <AutoSizer>\r\n                {({ width, height }) => (\r\n                  <>\r\n                    <div\r\n                      style={{\r\n                        width,\r\n                        display: 'flex',\r\n                        boxSizing: 'border-box',\r\n                        marginBottom: 10,\r\n                      }}\r\n                    >\r\n                      {renderGraphBtn == false || renderGraphBtn == 'false' ? (\r\n                        <></>\r\n                      ) : (\r\n                        <Graph\r\n                          filterDataClickEvent={filterDataClickEvent}\r\n                          filterData={filterData}\r\n                          inputRefs={inputRefs}\r\n                          data={data}\r\n                          customColumns={customColumns}\r\n                        />\r\n                      )}\r\n\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={this.clearInputs}\r\n                      >\r\n                        <CleanIcon />\r\n                        Limpar filtro\r\n                      </Button>\r\n                    </div>\r\n\r\n                    <Grid\r\n                      style={{\r\n                        overflow: 'hidden !important',\r\n                        outline: 'none',\r\n                        borderBottom: '1px solid #eee',\r\n                        marginBottom: 10,\r\n                      }}\r\n                      data={customColumns}\r\n                      cellRenderer={this._cellHeaderRenderer}\r\n                      columnWidth={this.getColumnWidth}\r\n                      columnCount={customColumns.length}\r\n                      fixedRowCount={1}\r\n                      height={75}\r\n                      rowHeight={75}\r\n                      rowCount={1}\r\n                      width={width}\r\n                      scrollLeft={scrollLeft}\r\n                      overscanColumnCount={customColumns.length}\r\n                    />\r\n\r\n                    <Grid\r\n                      style={{ outline: 'none' }}\r\n                      data={data}\r\n                      cellRenderer={\r\n                        data.length > 0\r\n                          ? this._cellRenderer\r\n                          : this.noDataRenderer\r\n                      }\r\n                      columnWidth={\r\n                        data.length > 0 ? this.getColumnWidth : width\r\n                      }\r\n                      columnCount={data.length > 0 ? customColumns.length : 1}\r\n                      deferredMeasurementCache={this.cache}\r\n                      height={height - 160}\r\n                      rowHeight={this.cache.rowHeight}\r\n                      rowCount={data.length > 0 ? data.length : 1}\r\n                      width={width}\r\n                      onScroll={onScroll}\r\n                    />\r\n                  </>\r\n                )}\r\n              </AutoSizer>\r\n            </div>\r\n          )}\r\n        </ScrollSync>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Relatorio)\r\n\r\nRelatorio.propTypes = {\r\n  customColumns: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  renderGraphBtn: PropTypes.bool.isRequired,\r\n  filterData: PropTypes.func.isRequired,\r\n  inputRefs: PropTypes.array.isRequired,\r\n  filterDataClickEvent: PropTypes.func.isRequired,\r\n  colunasArray: PropTypes.array.isRequired,\r\n  rowHeight: PropTypes.number.isRequired,\r\n  noFilters: PropTypes.bool.isRequired,\r\n  noBottomTotal: PropTypes.bool.isRequired,\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Paper, Typography } from '@material-ui/core'\r\nimport _ from 'lodash'\r\nimport moment from 'moment'\r\nimport Relatorio from './relatorio'\r\nimport { dateToString, datetimeToString } from '../utils/dateHelpers'\r\n\r\nclass RelatorioIndex extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      inputRefs: [],\r\n      originalData: [],\r\n      filteredData: [],\r\n      filtered: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { data } = this.props\r\n\r\n    this.setState({\r\n      originalData: [...data],\r\n    })\r\n  }\r\n\r\n  setFilteredData = async (filteredData, filtered, reRenderPieGraph) => {\r\n    await this.setState({\r\n      filteredData,\r\n      filtered,\r\n    })\r\n\r\n    if (reRenderPieGraph) {\r\n      reRenderPieGraph()\r\n    }\r\n  }\r\n\r\n  filterDataClickEvent = ({\r\n    pieGraphEvent,\r\n    selectedColumn,\r\n    reRenderPieGraph,\r\n    data,\r\n  }) => {\r\n    if (selectedColumn.noFilter) {\r\n      return\r\n    }\r\n\r\n    let pointName = pieGraphEvent.point.name\r\n\r\n    if (pointName == 'Indefinido') return\r\n\r\n    const { inputRefs } = this.state\r\n    let selectedInput = inputRefs.find(\r\n      input => input && input.name == selectedColumn.dataKey\r\n    )\r\n\r\n    if (selectedColumn.type == 'date') {\r\n      let stringDatePoint = dateToString(pointName)\r\n      let formatedDate = moment(stringDatePoint).format('DD/MM/YYYY')\r\n\r\n      if (selectedInput.value == formatedDate) {\r\n        selectedInput.value = ''\r\n        selectedInput.el.props.handleDateChangeOnPieGraphClick(null)\r\n      } else {\r\n        selectedInput.value = formatedDate\r\n        selectedInput.el.props.handleDateChangeOnPieGraphClick(stringDatePoint)\r\n      }\r\n\r\n      this.filterData({ data, isFilterInput: true, reRenderPieGraph })\r\n    } else if (selectedColumn.type == 'datetime') {\r\n      let stringDatePoint = datetimeToString(pointName)\r\n      let formatedDate = moment(stringDatePoint).format('DD/MM/YYYY')\r\n\r\n      if (selectedInput.value == formatedDate) {\r\n        selectedInput.value = ''\r\n        selectedInput.el.props.handleDateChangeOnPieGraphClick(null)\r\n      } else {\r\n        selectedInput.value = formatedDate\r\n        selectedInput.el.props.handleDateChangeOnPieGraphClick(stringDatePoint)\r\n      }\r\n\r\n      this.filterData({ data, isFilterInput: true, reRenderPieGraph })\r\n    } else if (selectedInput.isSelectInput) {\r\n      selectedInput.el.props.handleChangePieGraphClick(pointName)\r\n      this.filterData({ data, isFilterInput: true, reRenderPieGraph })\r\n    } else {\r\n      if (selectedInput && selectedInput.el.value == pointName) {\r\n        selectedInput.el.value = ''\r\n      } else if (selectedInput) {\r\n        selectedInput.el.value = pointName\r\n      }\r\n\r\n      this.filterData({ data, isFilterInput: true, reRenderPieGraph })\r\n    }\r\n  }\r\n\r\n  setSortedData = data => {\r\n    if (this.state.filtered) {\r\n      this.setState({\r\n        filteredData: data,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        originalData: data,\r\n      })\r\n    }\r\n  }\r\n\r\n  debounceFilterForInput = _.debounce(\r\n    ({ data, isFilterInput, reRenderPieGraph }) => {\r\n      let filteredList = []\r\n\r\n      let inputsWhithValue = this.state.inputRefs.filter(input => {\r\n        if (input.columnType == 'date' || input.columnType == 'datetime') {\r\n          if (input.value !== '') {\r\n            return input\r\n          }\r\n        } else if (input.isSelectInput) {\r\n          if (input.value !== '' && input.value !== undefined) {\r\n            return input\r\n          }\r\n        } else if (input.el.value !== '') {\r\n          return input\r\n        }\r\n      })\r\n\r\n      if (inputsWhithValue.length === 0 && isFilterInput) {\r\n        this.setFilteredData([], false)\r\n\r\n        if (reRenderPieGraph) {\r\n          reRenderPieGraph()\r\n        }\r\n        return\r\n      }\r\n\r\n      let lista = JSON.parse(JSON.stringify(data))\r\n\r\n      lista.map(obj => {\r\n        let passedForFilters = 0\r\n\r\n        inputsWhithValue.map(input => {\r\n          let nome = input.name\r\n          let inputValue = input.el.value || input.el.props.value\r\n\r\n          if (input.columnType == 'date') {\r\n            if (input.value == obj[nome]) {\r\n              passedForFilters++\r\n            }\r\n          } else if (input.columnType == 'datetime') {\r\n            let stringDatePoint = datetimeToString(obj[nome])\r\n            let formatedDate = moment(stringDatePoint).format('DD/MM/YYYY')\r\n\r\n            if (input.value == formatedDate) {\r\n              passedForFilters++\r\n            }\r\n          } else if (\r\n            obj[nome] &&\r\n            obj[nome]\r\n              .toLowerCase()\r\n              .trim()\r\n              .includes(inputValue.toLowerCase().trim())\r\n          ) {\r\n            passedForFilters++\r\n          }\r\n        })\r\n\r\n        if (passedForFilters == inputsWhithValue.length) {\r\n          filteredList.push(obj)\r\n        }\r\n      })\r\n\r\n      this.setFilteredData(filteredList, true, reRenderPieGraph)\r\n    },\r\n    600\r\n  )\r\n\r\n  filterData = ({\r\n    data = this.state.originalData,\r\n    isFilterInput,\r\n    isClearFilter,\r\n    columnType,\r\n    reRenderPieGraph,\r\n  }) => {\r\n    if (isFilterInput) {\r\n      return this.debounceFilterForInput({\r\n        data,\r\n        isFilterInput,\r\n        columnType,\r\n        reRenderPieGraph,\r\n      })\r\n    }\r\n\r\n    let filteredList = []\r\n\r\n    let inputsWhithValue = this.state.inputRefs.filter(input => {\r\n      if (input.columnType == 'date' || input.columnType == 'datetime') {\r\n        if (input.value) {\r\n          return input\r\n        }\r\n      } else if (input.isSelectInput) {\r\n        if (input.value !== '' && input.value !== undefined) {\r\n          return input\r\n        }\r\n      } else if (input.el.value !== '') {\r\n        return input\r\n      }\r\n    })\r\n\r\n    if (inputsWhithValue.length === 0 && (isFilterInput || isClearFilter)) {\r\n      this.setFilteredData([], false)\r\n      return\r\n    }\r\n\r\n    let lista = JSON.parse(JSON.stringify(data))\r\n\r\n    lista.map(obj => {\r\n      let passedForFilters = 0\r\n\r\n      inputsWhithValue.map(input => {\r\n        let nome = input.name\r\n        let inputValue = input.el.value || input.el.props.value\r\n\r\n        if (input.columnType == 'date') {\r\n          if (input.value == obj[nome]) {\r\n            passedForFilters++\r\n          }\r\n        } else if (input.columnType == 'datetime') {\r\n          let stringDatePoint = datetimeToString(obj[nome])\r\n          let formatedDate = moment(stringDatePoint).format('DD/MM/YYYY')\r\n\r\n          if (input.value == formatedDate) {\r\n            passedForFilters++\r\n          }\r\n        } else if (\r\n          obj[nome] &&\r\n          obj[nome]\r\n            .toLowerCase()\r\n            .trim()\r\n            .includes(inputValue.toLowerCase().trim())\r\n        ) {\r\n          passedForFilters++\r\n        }\r\n      })\r\n\r\n      if (passedForFilters == inputsWhithValue.length) {\r\n        filteredList.push(obj)\r\n      }\r\n    })\r\n\r\n    if (isFilterInput || isClearFilter) {\r\n      this.setFilteredData(filteredList, true)\r\n      return\r\n    }\r\n\r\n    return filteredList\r\n  }\r\n\r\n  reRenderAfterClearFilter = () => {\r\n    this.setState({\r\n      originalData: this.state.originalData,\r\n      filteredData: [],\r\n      filtered: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      customColumns,\r\n      noFilters,\r\n      rowHeight,\r\n      noBottomTotal,\r\n      renderGraphBtn,\r\n      tableHeight,\r\n    } = this.props\r\n\r\n    let colunasArray = []\r\n\r\n    customColumns.filter(e => {\r\n      colunasArray.push(e.dataKey)\r\n    })\r\n\r\n    let dataToRender = this.state.filtered\r\n      ? this.state.filteredData\r\n      : this.state.originalData\r\n\r\n    return (\r\n      <Paper style={{ padding: 10, height: tableHeight }}>\r\n        {this.state.originalData.length > 0 ? (\r\n          <div style={{ height: '100%' }}>\r\n            <Relatorio\r\n              colunasArray={colunasArray}\r\n              setSortedData={this.setSortedData}\r\n              setFilteredData={this.setFilteredData}\r\n              filteredData={this.state.filteredData}\r\n              data={dataToRender}\r\n              customColumns={customColumns}\r\n              filtered={this.state.filtered}\r\n              inputRefs={this.state.inputRefs}\r\n              filterData={this.filterData}\r\n              reRenderAfterClearFilter={this.reRenderAfterClearFilter}\r\n              noFilters={noFilters}\r\n              filterDataClickEvent={this.filterDataClickEvent}\r\n              rowHeight={rowHeight}\r\n              noBottomTotal={noBottomTotal}\r\n              renderGraphBtn={renderGraphBtn}\r\n            />\r\n            {!noBottomTotal && (\r\n              <div style={{ position: 'relative' }}>\r\n                <Typography variant=\"subheading\" style={{ marginTop: -17 }}>\r\n                  Total: {dataToRender.length}\r\n                </Typography>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>Erro </div>\r\n        )}\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RelatorioIndex\r\n\r\nRelatorioIndex.propTypes = {\r\n  customColumns: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  noFilters: PropTypes.bool.isRequired,\r\n  rowHeight: PropTypes.number.isRequired,\r\n  noBottomTotal: PropTypes.bool.isRequired,\r\n  renderGraphBtn: PropTypes.bool.isRequired,\r\n  tableHeight: PropTypes.number.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\nimport {\r\n  datetimeToStringYYYY_MM_DD,\r\n  datetimeToStringDD_MM_YYYY,\r\n} from './utils/dateHelpers'\r\nimport Relatorio from './relatorio'\r\n\r\nexport default function ShowRelatorio(props) {\r\n  const {\r\n    customColumns,\r\n    data,\r\n    noFilters,\r\n    rowHeight,\r\n    noBottomTotal,\r\n    renderGraphBtn,\r\n    tableHeight,\r\n  } = props\r\n\r\n  let DATA = JSON.parse(JSON.stringify(data))\r\n\r\n  let hasData = data && data.length > 0 ? true : false\r\n  let hasCustomColumns =\r\n    customColumns && customColumns.length > 0 ? true : false\r\n\r\n  if (!hasData || !hasCustomColumns) {\r\n    return <> Sem relatorio, contate o administrador do sistema. </>\r\n  }\r\n\r\n  let columnToFormat = []\r\n\r\n  customColumns.map(column => {\r\n    Object.keys(column).map(key => {\r\n      if (column[key] === 'date' || column[key] === 'datetime') {\r\n        columnToFormat.push(column)\r\n      }\r\n    })\r\n  })\r\n\r\n  if (columnToFormat.length > 0) {\r\n    DATA.map(e => {\r\n      columnToFormat.map(column => {\r\n        if (e[column.dataKey]) {\r\n          if (column.type == 'date') {\r\n            e[column.dataKey] = moment(e[column.dataKey])\r\n              .utc()\r\n              .format('DD/MM/YYYY')\r\n          } else if (column.type == 'datetime') {\r\n            if (column.dateType == 'dd/mm/yyyy') {\r\n              let response = datetimeToStringDD_MM_YYYY(e[column.dataKey])\r\n\r\n              let formatedDate = moment(response.data)\r\n                .utc()\r\n                .format('DD/MM/YYYY')\r\n              e[column.dataKey] = `${formatedDate} ${response.hhmmss}`\r\n            } else if (column.dateType == 'yyyy-mm-dd') {\r\n              let response = datetimeToStringYYYY_MM_DD(e[column.dataKey])\r\n\r\n              let formatedDate = moment(response.date)\r\n                .utc()\r\n                .format('DD/MM/YYYY')\r\n              e[column.dataKey] = `${formatedDate} ${response.hhmmss}`\r\n            } else if (column.dateType == 'iso') {\r\n              let response = datetimeToStringYYYY_MM_DD(e[column.dataKey])\r\n\r\n              let formatedDate = moment(response.date)\r\n                .utc()\r\n                .format('DD/MM/YYYY')\r\n              e[column.dataKey] = `${formatedDate} ${response.hhmmss}`\r\n            } else {\r\n              e[column.dataKey] = moment(e[column.dataKey])\r\n                .utc()\r\n                .format('DD/MM/YYYY hh:mm:ss')\r\n            }\r\n          }\r\n        } else {\r\n          return ''\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Relatorio\r\n      customColumns={customColumns}\r\n      data={DATA}\r\n      noFilters={noFilters}\r\n      rowHeight={rowHeight}\r\n      noBottomTotal={noBottomTotal}\r\n      renderGraphBtn={renderGraphBtn}\r\n      tableHeight={tableHeight}\r\n    />\r\n  )\r\n}\r\n\r\nShowRelatorio.defaultProps = {\r\n  noBottomTotal: false,\r\n  noFilters: false,\r\n  renderGraphBtn: true,\r\n  tableHeight: 400,\r\n}\r\n\r\nShowRelatorio.propTypes = {\r\n  customColumns: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  rowHeight: PropTypes.number.isRequired,\r\n  noFilters: PropTypes.bool,\r\n  noBottomTotal: PropTypes.bool,\r\n  renderGraphBtn: PropTypes.bool,\r\n  tableHeight: PropTypes.number,\r\n}\r\n","import React from 'react'\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny'\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\r\n\r\nexport const columns = [\r\n  {\r\n    dataKey: 'first_name',\r\n    label: 'First Name',\r\n  },\r\n  {\r\n    dataKey: 'last_name',\r\n    label: 'Last Name',\r\n  },\r\n  {\r\n    dataKey: 'email',\r\n    label: 'E-mail',\r\n  },\r\n  {\r\n    dataKey: 'gender',\r\n    label: 'Gender',\r\n    inputFilterSelect: [\r\n      { value: 'M', label: 'Male' },\r\n      { value: 'F', label: 'Female' },\r\n    ],\r\n    render: ({ row, KEY }) => (\r\n      <div style={{ fontSize: 13, textAlign: 'center', width: '90%' }}>\r\n        {row[KEY] == 'M' ? 'Male' : 'Female'}\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    dataKey: 'language',\r\n    label: 'Language',\r\n  },\r\n  {\r\n    dataKey: 'birthday',\r\n    label: 'Birthday',\r\n    type: 'date',\r\n  },\r\n  {\r\n    dataKey: 'cycle',\r\n    label: 'Cycle',\r\n    render: ({ row, KEY }) => {\r\n      return (\r\n        <div>\r\n          {row[KEY] == 'morning' ? (\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                backgroundImage: 'linear-gradient(red, yellow)',\r\n                padding: 5,\r\n                borderRadius: 4,\r\n                color: '#fff',\r\n              }}\r\n            >\r\n              <WbSunnyIcon />\r\n              {row[KEY]}\r\n            </div>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                backgroundImage: 'linear-gradient(blue, black)',\r\n                color: '#fff',\r\n                padding: 5,\r\n                borderRadius: 4,\r\n              }}\r\n            >\r\n              <Brightness2Icon />\r\n              {row[KEY]}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n  },\r\n]\r\n","export const data = [\r\n  {\r\n    id: 1,\r\n    first_name: 'Ximenez',\r\n    last_name: 'Middleditch',\r\n    email: 'xmiddleditch0@godaddy.com',\r\n    gender: 'M',\r\n    language: 'Tamil',\r\n    birthday: '2006-08-06',\r\n    cycle: 'night',\r\n  },\r\n  {\r\n    id: 2,\r\n    first_name: 'Buddie',\r\n    last_name: 'Vallery',\r\n    email: 'bvallery1@1und1.de',\r\n    gender: 'M',\r\n    language: 'Hindi',\r\n    birthday: '1997-06-25',\r\n    cycle: 'night',\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    first_name: 'Andriette',\r\n    last_name: 'Fryman',\r\n    email: 'afryman2@elegantthemes.com',\r\n    gender: 'F',\r\n    language: 'Maltese',\r\n    birthday: '2007-02-19',\r\n    cycle: 'night',\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    first_name: 'Burtie',\r\n    last_name: 'Ludwig',\r\n    email: 'bludwig3@opera.com',\r\n    gender: 'M',\r\n    language: 'Icelandic',\r\n    birthday: '1992-03-18',\r\n    cycle: 'morning',\r\n  },\r\n\r\n  {\r\n    id: 5,\r\n    first_name: 'Regine',\r\n    last_name: 'Varden',\r\n    email: 'rvarden4@spiegel.de',\r\n    gender: 'F',\r\n    language: 'Malay',\r\n    birthday: '1964-02-11',\r\n    cycle: 'night',\r\n  },\r\n\r\n  {\r\n    id: 6,\r\n    first_name: 'Aubine',\r\n    last_name: 'Casillis',\r\n    email: 'acasillis5@scribd.com',\r\n    gender: 'F',\r\n    language: 'Kazakh',\r\n    birthday: '1961-10-13',\r\n    cycle: 'morning',\r\n  },\r\n\r\n  {\r\n    id: 7,\r\n    first_name: 'Candra',\r\n    last_name: 'Shepherd',\r\n    email: 'cshepherd6@ibm.com',\r\n    gender: 'F',\r\n    language: 'Greek',\r\n    birthday: '1969-06-01',\r\n    cycle: 'morning',\r\n  },\r\n\r\n  {\r\n    id: 8,\r\n    first_name: 'Lydie',\r\n    last_name: 'De la Harpe',\r\n    email: 'ldelaharpe7@sciencedirect.com',\r\n    gender: 'F',\r\n    language: 'Lithuanian',\r\n    birthday: '1965-07-06',\r\n    cycle: 'morning',\r\n  },\r\n\r\n  {\r\n    id: 9,\r\n    first_name: 'Henryetta',\r\n    last_name: 'Lehr',\r\n    email: 'hlehr8@ezinearticles.com',\r\n    gender: 'F',\r\n    language: 'Sotho',\r\n    birthday: '1986-09-10',\r\n    cycle: 'night',\r\n  },\r\n\r\n  {\r\n    id: 10,\r\n    first_name: 'Tiffie',\r\n    last_name: 'Denham',\r\n    email: 'tdenham9@imageshack.us',\r\n    gender: 'F',\r\n    language: 'English',\r\n    birthday: '1984-12-28',\r\n    cycle: 'night',\r\n  },\r\n\r\n  {\r\n    id: 11,\r\n    first_name: 'Pasquale',\r\n    last_name: 'Goodsall',\r\n    email: 'pgoodsalla@nature.com',\r\n    gender: 'M',\r\n    language: 'French',\r\n    birthday: '1973-04-24',\r\n    cycle: 'morning',\r\n  },\r\n\r\n  {\r\n    id: 12,\r\n    first_name: 'Klaus',\r\n    last_name: 'Scherer',\r\n    email: 'kschererb@census.gov',\r\n    gender: 'M',\r\n    language: 'Tajik',\r\n    birthday: '1996-06-24',\r\n    cycle: 'night',\r\n  },\r\n\r\n  {\r\n    id: 13,\r\n    first_name: 'Marion',\r\n    last_name: 'Peare',\r\n    email: 'mpearec@issuu.com',\r\n    gender: 'F',\r\n    language: 'Tsonga',\r\n    birthday: '1952-02-05',\r\n    cycle: 'morning',\r\n  },\r\n\r\n  {\r\n    id: 14,\r\n    first_name: 'Eustace',\r\n    last_name: 'Prestland',\r\n    email: 'eprestlandd@ucsd.edu',\r\n    gender: 'M',\r\n    language: 'Thai',\r\n    birthday: '1958-06-26',\r\n    cycle: 'night',\r\n  },\r\n\r\n  {\r\n    id: 15,\r\n    first_name: 'Cele',\r\n    last_name: 'La Torre',\r\n    email: 'clatorree@cbsnews.com',\r\n    gender: 'F',\r\n    language: 'Papiamento',\r\n    birthday: '1969-08-15',\r\n    cycle: 'morning',\r\n  },\r\n\r\n  {\r\n    id: 16,\r\n    first_name: 'Reed',\r\n    last_name: 'Andrich',\r\n    email: 'randrichf@usa.gov',\r\n    gender: 'M',\r\n    language: 'Tswana',\r\n    birthday: '1982-05-16',\r\n    cycle: 'morning',\r\n  },\r\n\r\n  {\r\n    id: 17,\r\n    first_name: 'Kathye',\r\n    last_name: 'Tollerfield',\r\n    email: 'ktollerfieldg@cdc.gov',\r\n    gender: 'F',\r\n    language: 'Catalan',\r\n    birthday: '1986-05-05',\r\n    cycle: 'morning',\r\n  },\r\n\r\n  {\r\n    id: 18,\r\n    first_name: 'Chaddie',\r\n    last_name: 'Winger',\r\n    email: 'cwingerh@xinhuanet.com',\r\n    gender: 'M',\r\n    language: 'Sotho',\r\n    birthday: '1950-10-10',\r\n    cycle: 'morning',\r\n  },\r\n\r\n  {\r\n    id: 19,\r\n    first_name: 'Archibald',\r\n    last_name: 'Barthram',\r\n    email: 'abarthrami@hatena.ne.jp',\r\n    gender: 'M',\r\n    language: 'Moldovan',\r\n    birthday: '1974-02-09',\r\n    cycle: 'morning',\r\n  },\r\n\r\n  {\r\n    id: 20,\r\n    first_name: 'Fredericka',\r\n    last_name: 'Lumox',\r\n    email: 'flumoxj@jigsy.com',\r\n    gender: 'F',\r\n    language: 'Dzongkha',\r\n    birthday: '1997-05-05',\r\n    cycle: 'night',\r\n  },\r\n]\r\n","import React from 'react'\r\nimport Relatorio from './components'\r\nimport { columns } from './components/devData/columns'\r\nimport { data } from './components/devData/data'\r\n\r\nfunction App() {\r\n  return (\r\n    <Relatorio\r\n      customColumns={columns}\r\n      data={data}\r\n      rowHeight={50}\r\n      tableHeight=\"90vh\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}